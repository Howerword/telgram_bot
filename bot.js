require('dotenv').config(); // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
const { Telegraf, Markup } = require('telegraf'); // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ Telegraf
const schedule = require('node-schedule'); // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –∑–∞–¥–∞—á
const db = require('./database'); // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö

const bot = new Telegraf(process.env.BOT_TOKEN); // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–æ—Ç–∞
const userSchedules = new Map(); // –ö–∞—Ä—Ç–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤

// –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏
const mainMenu = Markup.keyboard([
    ['üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', 'üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è'],
    ['‚ñ∂Ô∏è –ü–æ—á–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', '‚èπ –ó—É–ø–∏–Ω–∏—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è'],
    ['üö™ –í–∏–π—Ç–∏']
]).resize(); // –†–æ–±–∏–º–æ –∫–Ω–æ–ø–∫–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–º–∏

// –ö–Ω–æ–ø–∫–∏ –≤–∏–±–æ—Ä—É —Ö–≤–∏–ª–∏–Ω –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
const reminderTimes = [30, 35, 40, 45];
const reminderMenu = Markup.inlineKeyboard(
    reminderTimes.map((time) => Markup.button.callback(`${time} —Ö–≤`, `set_reminder_${time}`)),
    { columns: 2 }
);

// –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
const startReminder = async (userId, ctx) => {
    const reminderTime = await db.getReminderTime(userId);
    if (!reminderTime) return;

    if (userSchedules.has(userId)) {
        userSchedules.get(userId).cancel(); // –í–∏–º–∏–∫–∞—î–º–æ —Å—Ç–∞—Ä–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
    }

    const job = schedule.scheduleJob(`0 ${reminderTime} * * * *`, () => {
        ctx.telegram.sendMessage(userId, 'üîî –ß–∞—Å –∑—Ä–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è!');
    });

    userSchedules.set(userId, job);
};

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
bot.start(async (ctx) => {
    const userId = ctx.from.id;
    try {
        const savedTime = await db.getReminderTime(userId); // –û—Ç—Ä–∏–º—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —á–∞—Å
        let message = '–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –∞—Å–∏—Å—Ç–µ–Ω—Ç:';
        if (savedTime) {
            message += `\nüîî –í–∞—à –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —á–∞—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å: ${savedTime} —Ö–≤`;
        }
        ctx.reply(message, mainMenu);
    } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:', err);
        ctx.reply('–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–µ—Å—Ç–æ–≤—ñ –∫–Ω–æ–ø–∫–∏:', mainMenu);
    }
});

// –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è"
bot.hears('üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', (ctx) => {
    ctx.reply('–û–±–µ—Ä—ñ—Ç—å, –Ω–∞ —Å–∫—ñ–ª—å–∫–∏ —Ö–≤–∏–ª–∏–Ω –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ—ó –≥–æ–¥–∏–Ω–∏ —Ö–æ—á–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:', reminderMenu);
});

// –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
bot.action(/^set_reminder_\d+$/, async (ctx) => {
    const userId = ctx.from.id;
    const selectedTime = parseInt(ctx.match[0].split('_')[2]);
    try {
        await db.setReminderTime(userId, selectedTime); // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É –±–∞–∑—ñ
        ctx.reply(`‚úÖ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${selectedTime} —Ö–≤–∏–ª–∏–Ω –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ—ó –≥–æ–¥–∏–Ω–∏.`);
        await startReminder(userId, ctx); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
    } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:', err);
        ctx.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
    }
});

// –ü–µ—Ä–µ–≥–ª—è–¥ –∞–∫—Ç–∏–≤–Ω–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
bot.hears('üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', async (ctx) => {
    const userId = ctx.from.id;
    const reminderTime = await db.getReminderTime(userId);
    if (reminderTime) {
        ctx.reply(`üìã –í–∞—à—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:
üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É –Ω–∞ ${reminderTime} —Ö–≤.`);
    } else {
        ctx.reply('‚ùå –í–∏ —â–µ –Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–ª–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è.');
    }
});

// –ü–æ—á–∞—Ç–æ–∫ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
bot.hears('‚ñ∂Ô∏è –ü–æ—á–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', async (ctx) => {
    const userId = ctx.from.id;
    await startReminder(userId, ctx);
    ctx.reply('‚ñ∂Ô∏è –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω–æ.');
});

// –ó—É–ø–∏–Ω–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
bot.hears('‚èπ –ó—É–ø–∏–Ω–∏—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', (ctx) => {
    const userId = ctx.from.id;
    if (userSchedules.has(userId)) {
        userSchedules.get(userId).cancel(); // –ó—É–ø–∏–Ω—è—î–º–æ –ø–ª–∞–Ω–æ–≤–∞–Ω—É –∑–∞–¥–∞—á—É
        userSchedules.delete(userId); // –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –∞–∫—Ç–∏–≤–Ω–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
        ctx.reply('‚èπ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω–æ.');
    } else {
        ctx.reply('‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å.');
    }
});

// –í–∏—Ö—ñ–¥ –∑ –±–æ—Ç–∞ —Ç–∞ –∑—É–ø–∏–Ω–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
bot.hears('üö™ –í–∏–π—Ç–∏', (ctx) => {
    const userId = ctx.from.id;
    if (userSchedules.has(userId)) {
        userSchedules.get(userId).cancel();
        userSchedules.delete(userId);
    }
    ctx.reply('üëã –í–∏—Ö—ñ–¥ –≤–∏–∫–æ–Ω–∞–Ω–æ. –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω—ñ.');
});

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!');
