require('dotenv').config(); // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
const { Telegraf, Markup } = require('telegraf'); // –Ü–º–ø–æ—Ä—Ç Telegraf
const schedule = require('node-schedule'); // –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –∑–∞–≤–¥–∞–Ω—å
const axios = require('axios'); // HTTP-–∑–∞–ø–∏—Ç–∏
const db = require('./database'); // –†–æ–±–æ—Ç–∞ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö

const bot = new Telegraf(process.env.BOT_TOKEN);
const userSchedules = new Map(); // –ö–∞—Ä—Ç–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å

// –ú–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
const motivationalMessages = [
  "üåü –¢–∏ –≤–∂–µ –∑—Ä–æ–±–∏–≤ –≤–µ–ª–∏–∫–∏–π –∫—Ä–æ–∫ —É–ø–µ—Ä–µ–¥ ‚Äì –Ω–µ –∑—É–ø–∏–Ω—è–π—Å—è!",
  "üí™ –ú–∞–ª–µ–Ω—å–∫—ñ –∫—Ä–æ–∫–∏ –≤–µ–¥—É—Ç—å –¥–æ –≤–µ–ª–∏–∫–∏—Ö –¥–æ—Å—è–≥–Ω–µ–Ω—å!",
  "üî• –í—Å–µ, —â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ ‚Äì —Ü–µ –ø–æ—á–∞—Ç–∏!",
  "üöÄ –ö–æ–∂–µ–Ω —Ç–≤—ñ–π —Ä—É—Ö ‚Äì —Ü–µ —â–µ –æ–¥–∏–Ω –∫—Ä–æ–∫ –¥–æ —É—Å–ø—ñ—Ö—É!",
  "üí° –ù–∞–π–∫—Ä–∞—â–∏–π —Å–ø–æ—Å—ñ–± –ø–æ—á–∞—Ç–∏ ‚Äì —Ü–µ –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –≥–æ–≤–æ—Ä–∏—Ç–∏ —ñ –ø–æ—á–∞—Ç–∏ –¥—ñ—è—Ç–∏!",
  "üåà –í–µ–ª–∏–∫–∞ –ø–æ–¥–æ—Ä–æ–∂ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –∫—Ä–æ–∫—É!",
  "üèÜ –°—å–æ–≥–æ–¥–Ω—ñ ‚Äì —ñ–¥–µ–∞–ª—å–Ω–∏–π –¥–µ–Ω—å –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —Å—Ç–∞—Ç–∏ –∫—Ä–∞—â–æ—é –≤–µ—Ä—Å—ñ—î—é —Å–µ–±–µ!",
  "üìà –ù–∞–≤—ñ—Ç—å 1% –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∫–æ–∂–µ–Ω –¥–µ–Ω—å —Å—Ç–≤–æ—Ä—é—î –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å!",
  "üí≠ –í—ñ—Ä–∞ –≤ —Å–µ–±–µ ‚Äì —Ü–µ –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ –¥–æ –ø–µ—Ä–µ–º–æ–≥–∏!",
  "‚è≥ –ù–µ –≤—ñ–¥–∫–ª–∞–¥–∞–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —Ç–µ, —â–æ –º–æ–∂–µ—à –∑—Ä–æ–±–∏—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ!",
  "üéØ –°—Ñ–æ–∫—É—Å—É–π—Å—è –Ω–∞ –º–µ—Ç—ñ, –∞ –Ω–µ –Ω–∞ –ø–µ—Ä–µ—à–∫–æ–¥–∞—Ö!",
  "üîã –ù–µ–≤–¥–∞—á—ñ ‚Äì —Ü–µ –ª–∏—à–µ —Å—Ö–æ–¥–∏–Ω–∫–∏ –Ω–∞ —à–ª—è—Ö—É –¥–æ —É—Å–ø—ñ—Ö—É!",
  "üåø –í—ñ–¥–ø–æ—á–∏–Ω–æ–∫ ‚Äì —Ü–µ –Ω–µ —Å–ª–∞–±–∫—ñ—Å—Ç—å, –∞ —á–∞—Å—Ç–∏–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ!",
  "üí• –ß–∏–º –±—ñ–ª—å—à–µ –ø—Ä–∞—Ü—é—î—à –Ω–∞–¥ —Å–æ–±–æ—é, —Ç–∏–º –±—ñ–ª—å—à–µ —Ç–æ–±—ñ —â–∞—Å—Ç–∏—Ç—å!",
  "üé∂ –ó—Ä–æ–±–∏ –ø–∞—É–∑—É, –≤–¥–∏—Ö–Ω–∏ –Ω–∞ –ø–æ–≤–Ω—ñ –≥—Ä—É–¥–∏ ‚Äì —ñ –≤–ø–µ—Ä–µ–¥ –¥–æ –Ω–æ–≤–∏—Ö –∑–≤–µ—Ä—à–µ–Ω—å!"
];

// –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏ (–±–µ–∑ —Ç–µ—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å)
const mainMenu = Markup.keyboard([
  ['üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', 'üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è'],
  ['üñ• –ü–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏'],
  ['üîÑ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', 'üòÇ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–µ–º'],
  ['üö™ –í–∏–π—Ç–∏']
]).resize();

// –Ü–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
const reminderTimes = [30, 35, 40, 45];
const reminderMenu = Markup.inlineKeyboard(
  reminderTimes.map(time => Markup.button.callback(`${time} —Ö–≤`, `set_reminder_${time}`)),
  { columns: 2 }
);

// –Ü–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —á–∞—Å—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º–æ–Ω—ñ—Ç–æ—Ä—ñ–≤
const monitorTimes = [0, 15, 30, 45];
const monitorMenu = Markup.inlineKeyboard(
  monitorTimes.map(time => Markup.button.callback(`${time} —Ö–≤`, `set_monitor_${time}`)),
  { columns: 2 }
);

// –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –º–µ–º–∞ –∑ API
const getMemeFromAPI = async () => {
  try {
    const response = await axios.get('https://meme-api.com/gimme');
    return response.data.url;
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–µ–º–∞:', error);
    return null;
  }
};

// –§—É–Ω–∫—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –º–µ–º–∞ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —Ç–∏–ø—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
const sendMeme = async (ctx, userId, memeUrl) => {
  try {
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É —è–∫ –±—É—Ñ–µ—Ä–∞
    const response = await axios.get(memeUrl, { responseType: 'arraybuffer' });
    const buffer = Buffer.from(response.data, 'binary');
    const contentType = response.headers['content-type'];
    // –Ø–∫—â–æ content-type –º—ñ—Å—Ç–∏—Ç—å "gif" ‚Äì –Ω–∞–¥—Å–∏–ª–∞—î–º–æ —è–∫ –∞–Ω—ñ–º–∞—Ü—ñ—é, —ñ–Ω–∞–∫—à–µ ‚Äì —è–∫ —Ñ–æ—Ç–æ
    if (contentType.includes('gif')) {
      await ctx.telegram.sendAnimation(userId, { source: buffer });
    } else {
      await ctx.telegram.sendPhoto(userId, { source: buffer });
    }
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –º–µ–º–∞:', error);
    await ctx.telegram.sendMessage(userId, '‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –º–µ–º–∞.');
  }
};

// –§—É–Ω–∫—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
const sendMotivationalMessage = async (ctx, userId) => {
  const message = motivationalMessages[Math.floor(Math.random() * motivationalMessages.length)];
  await ctx.telegram.sendMessage(userId, `üîî –ß–∞—Å –∑—Ä–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è!\n${message}`);
};

// –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
const startReminder = async (userId, ctx) => {
  const reminderTime = await db.getReminderTime(userId);
  if (!reminderTime) return;

  // –Ø–∫—â–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ ‚Äì —Å–∫–∞—Å–æ–≤—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è
  if (userSchedules.has(userId)) {
    userSchedules.get(userId).cancel();
  }

  // –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è: –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É –Ω–∞ –≤–∫–∞–∑–∞–Ω—É —Ö–≤–∏–ª–∏–Ω—É
  const job = schedule.scheduleJob(`0 ${reminderTime} * * * *`, async () => {
    try {
      if (Math.random() < 0.5) { // 50% —à–∞–Ω—Å –Ω–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –º–µ–º–∞
        const meme = await getMemeFromAPI();
        if (meme) {
          await sendMeme(ctx, userId, meme);
        } else {
          await sendMotivationalMessage(ctx, userId);
        }
      } else {
        await sendMotivationalMessage(ctx, userId);
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:', error);
    }
  });

  userSchedules.set(userId, job);
};

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
bot.start(async (ctx) => {
  const userId = ctx.from.id;
  try {
    const savedTime = await db.getReminderTime(userId);
    let message = '–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –∞—Å–∏—Å—Ç–µ–Ω—Ç:';
    if (savedTime) {
      message += `\nüîî –í–∞—à –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —á–∞—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å: ${savedTime} —Ö–≤`;
    }
    await ctx.reply(message, mainMenu);
  } catch (err) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:', err);
    await ctx.reply('–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–µ—Å—Ç–æ–≤—ñ –∫–Ω–æ–ø–∫–∏:', mainMenu);
  }
});

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
bot.hears('üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', (ctx) => {
  ctx.reply('–û–±–µ—Ä—ñ—Ç—å, —á–µ—Ä–µ–∑ —Å–∫—ñ–ª—å–∫–∏ —Ö–≤–∏–ª–∏–Ω –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ—ó –≥–æ–¥–∏–Ω–∏ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:', reminderMenu);
});

// –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
bot.action(/^set_reminder_\d+$/, async (ctx) => {
  const userId = ctx.from.id;
  const selectedTime = parseInt(ctx.match[0].split('_')[2]);
  try {
    await db.setReminderTime(userId, selectedTime);
    await ctx.reply(`‚úÖ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${selectedTime} —Ö–≤–∏–ª–∏–Ω –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ—ó –≥–æ–¥–∏–Ω–∏.`);
    // –Ø–∫—â–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ ‚Äì –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ –π–æ–≥–æ –∑ –Ω–æ–≤–∏–º —á–∞—Å–æ–º
    if (userSchedules.has(userId)) {
      userSchedules.get(userId).cancel();
      await startReminder(userId, ctx);
    }
  } catch (err) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:', err);
    await ctx.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
  }
});

// –ü–µ—Ä–µ–≥–ª—è–¥ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
bot.hears('üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', async (ctx) => {
  const userId = ctx.from.id;
  const reminderTime = await db.getReminderTime(userId);
  if (reminderTime) {
    await ctx.reply(`üìã –í–∞—à—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:\nüîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É –Ω–∞ ${reminderTime} —Ö–≤.`);
  } else {
    await ctx.reply('‚ùå –í–∏ —â–µ –Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–ª–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è.');
  }
});

// Toggle –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–∫–∏ "üîÑ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è"
bot.hears('üîÑ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è', async (ctx) => {
  const userId = ctx.from.id;
  // –Ø–∫—â–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ ‚Äì –∑—É–ø–∏–Ω—è—î–º–æ —ó—Ö
  if (userSchedules.has(userId)) {
    userSchedules.get(userId).cancel();
    userSchedules.delete(userId);
    await ctx.reply('–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω–æ.');
  } else {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —á–∞—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
    const reminderTime = await db.getReminderTime(userId);
    if (!reminderTime) {
      await ctx.reply("–í–∏ —â–µ –Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–ª–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è' –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Å—É.");
      return;
    }
    await startReminder(userId, ctx);
    await ctx.reply('–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω–æ.');
  }
});

// –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –º–µ–º–∞
bot.hears('üòÇ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–µ–º', async (ctx) => {
  try {
    const meme = await getMemeFromAPI();
    if (meme) {
      await sendMeme(ctx, ctx.from.id, meme);
    } else {
      await ctx.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–µ–º. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ!');
    }
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –º–µ–º–∞:', error);
    await ctx.reply('‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –º–µ–º–∞.');
  }
});

// –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Å—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º–æ–Ω—ñ—Ç–æ—Ä—ñ–≤
bot.hears('üñ• –ü–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏', (ctx) => {
  ctx.reply('–û–±–µ—Ä—ñ—Ç—å —Ö–≤–∏–ª–∏–Ω–∏ –∫–æ–∂–Ω–∏—Ö –¥–≤–æ—Ö –≥–æ–¥–∏–Ω –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º–æ–Ω—ñ—Ç–æ—Ä—ñ–≤:', monitorMenu);
});

// –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É —á–∞—Å—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º–æ–Ω—ñ—Ç–æ—Ä—ñ–≤
bot.action(/^set_monitor_\d+$/, async (ctx) => {
  const userId = ctx.from.id;
  const selectedTime = parseInt(ctx.match[0].split('_')[2]);
  try {
    await db.setMonitorReminderTime(userId, selectedTime);
    await ctx.reply(`‚úÖ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –º–æ–Ω—ñ—Ç–æ—Ä—ñ–≤ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${selectedTime} —Ö–≤ –∫–æ–∂–Ω—ñ 2 –≥–æ–¥–∏–Ω–∏.`);
  } catch (err) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä—ñ–≤:', err);
    await ctx.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
  }
});

// –í–∏—Ö—ñ–¥ –∑ –±–æ—Ç–∞ —Ç–∞ –∑—É–ø–∏–Ω–∫–∞ –≤—Å—ñ—Ö –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å
bot.hears('üö™ –í–∏–π—Ç–∏', (ctx) => {
  const userId = ctx.from.id;
  if (userSchedules.has(userId)) {
    userSchedules.get(userId).cancel();
    userSchedules.delete(userId);
  }
  ctx.reply('üëã –í–∏—Ö—ñ–¥ –≤–∏–∫–æ–Ω–∞–Ω–æ. –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω—ñ.');
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!');
